#!/usr/bin/env python3
"""
S·ª≠a c√°c l·ªói Flutter compatibility ƒë·ªÉ ch·∫°y ƒë∆∞·ª£c tr√™n Chrome
"""
import os
import re
import glob

def fix_flutter_compatibility():
    workspace_path = "/workspaces/saboarenav3"
    
    # T√¨m t·∫•t c·∫£ file Dart
    dart_files = []
    for root, dirs, files in os.walk(workspace_path):
        # Skip build v√† .dart_tool
        dirs[:] = [d for d in dirs if d not in ['.dart_tool', 'build', '.git', '.venv']]
        for file in files:
            if file.endswith('.dart'):
                dart_files.append(os.path.join(root, file))
    
    print(f"üîß S·ª¨A C√ÅC L·ªñI FLUTTER COMPATIBILITY")
    print(f"T√¨m th·∫•y {len(dart_files)} file Dart")
    print("=" * 50)
    
    fixes_applied = 0
    
    for file_path in dart_files:
        try:
            with open(file_path, 'r', encoding='utf-8') as f:
                content = f.read()
            
            original_content = content
            
            # Fix 1: DropdownButtonFormField initialValue -> value
            if 'DropdownButtonFormField' in content and 'initialValue:' in content:
                # Ch·ªâ s·ª≠a trong context c·ªßa DropdownButtonFormField
                pattern = r'(DropdownButtonFormField[^}]*?)initialValue:'
                content = re.sub(pattern, r'\1value:', content, flags=re.MULTILINE | re.DOTALL)
            
            # Fix 2: Switch activeThumbColor -> thumbColor
            if 'Switch(' in content and 'activeThumbColor:' in content:
                content = content.replace('activeThumbColor:', 'thumbColor:')
            
            # Fix 3: Remove geolocator problematic imports n·∫øu c√≥
            if 'geolocator_android' in content:
                print(f"‚ö†Ô∏è  Geolocator issue in: {file_path}")
            
            if content != original_content:
                with open(file_path, 'w', encoding='utf-8') as f:
                    f.write(content)
                fixes_applied += 1
                print(f"‚úÖ Fixed: {os.path.relpath(file_path, workspace_path)}")
                
        except Exception as e:
            print(f"‚ùå Error processing {file_path}: {e}")
    
    print(f"\nüéâ Ho√†n th√†nh! ƒê√£ s·ª≠a {fixes_applied} files")
    return fixes_applied

if __name__ == "__main__":
    fix_flutter_compatibility()